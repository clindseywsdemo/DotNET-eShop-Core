name: Whitesource Unified Agent Scan - .NET (dotnet)

on: [push, pull_request, workflow_dispatch]

jobs:

  build:
    env:
      WS_ProductionBranches: "maain,release"
      WS_DevKey: "e9325f5150604d60a5a5843e6155b65eb4c6ff62b16847c2895da8de40747c40"
      WS_ProdKey: ${{secrets.APIKEY}}
      
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true
        
    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release        
        
    - name: Set Environment Var for Branch
      run:  echo PROJECT_TO_TEST=","${GITHUB_REF_NAME}"," >> $GITHUB_ENV

    - name: Reformat Environment Variable
      run:  echo WS_ProductionBranches=","$WS_ProductionBranches"," >> $GITHUB_ENV   
      
    - name: Set Org API Key if branch is marked as production
      if: contains(env.WS_ProductionBranches, env.PROJECT_TO_TEST)
      run: echo WS_APIKEY=$WS_ProdKey >> $GITHUB_ENV   
      
    - name: Set Org API Key if branch is non-production
      if: contains(env.WS_ProductionBranches, env.PROJECT_TO_TEST) == false
      run: echo WS_APIKEY=$WS_DevKey >> $GITHUB_ENV   
      
    - name: WhiteSource Unified Agent Scan
      run: |
        echo "WS_ProductionBranches "$WS_ProductionBranches
        echo "GITHUB_REF_NAME = "${GITHUB_REF_NAME}
        echo "Project To Test "$PROJECT_TO_TEST
        echo $KeyToUse
        echo $WS_ProductionBranches

    - name: WhiteSource Unified Agent Scan
      env:
        WS_USERKEY: ${{secrets.USERKEY}}
        WS_WSS_URL: https://saas.whitesourcesoftware.com/agent
        WS_PRODUCTNAME: ${{github.event.repository.name}}
        WS_PROJECTNAME: ${{github.ref}}
        WS_FILESYSTEMSCAN: false
        GH_BRANCH: ${{ github.head_ref }}
        
      run: |
        echo "WSAPIKEY"$WS_APIKEY
        echo Downloading WhiteSource Unified Agent
        curl -LJO https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar
        if [[ "$(curl -sL https://unified-agent.s3.amazonaws.com/wss-unified-agent.jar.sha256)" != "$(sha256sum wss-unified-agent.jar)" ]] ; then
          echo "Integrity Check Failed"
        else
          echo "Integrity Check Passed"
          echo Starting WhiteSource Scan
          java -jar wss-unified-agent.jar
        fi
